<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
ini_set('display_errors',1);
class Employee_attendance extends User_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Employees_model');
        $this->load->model('Department_model');
        $this->load->model('Designation_model');
		$this->load->model('Employees_attendance_model');
		
         /* Title Page :: Common */
         $this->page_title->push('Employee Attendance');
         $this->data['pagetitle'] = $this->page_title->show();
 
         /* Breadcrumbs :: Common */
         $this->breadcrumbs->unshift(1, 'Attendance', 'attendance');

         $this->load->library('Pdf');
    } 

    /*
     * Listing of Employee
     */
    function index()
    {
        //$params['limit'] = RECORDS_PER_PAGE; 
        //$params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        /* $config = $this->config->item('pagination');
        $config['base_url'] = site_url('Employee/index?');
        $config['total_rows'] = $this->Employees_model->get_all_employee_count();
        $this->pagination->initialize($config); */

        /* Breadcrumbs */
        $this->breadcrumbs->unshift(2, 'Listing', 'attendance');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();

        $this->data['employee'] = $this->Employees_model->get_all_employee();
        /* Load Template */
        $this->template->public_render('Attendance/index', $this->data);
	}
	
	//take individual employee attendance
	function TakeAttendance()
	{
		
		$this->load->library('form_validation');
        $this->form_validation->set_rules('UID','Employee Name','required');
        $this->form_validation->set_rules('attendance_date','Date','required');
        $this->form_validation->set_rules('sign_in','Sign In Time','required');
        if($this->form_validation->run())     
        {  
			
			$signin = date('Y-m-d H:i:s',strtotime($this->input->post('attendance_date').$this->input->post('sign_in')));
			
			$params = array('ATTENDANCE_TAKEN_DATE'=>date('Y-m-d H:i:s',strtotime($this->input->post("attendance_date"))),
						  'UID'=>$this->input->post('UID'),
						  'ATTENDACE'=>'P',
						  'LOCATION'=>$this->input->post('LOCATION'),
						 // 'IS_LATE'=>$IS_LATE,
						  'SIGN_IN'=>$signin);
           
			
            $result=$this->Employees_attendance_model->saveUserAttendance($params); 
            redirect('Employee_attendance/TakeAttendance');
        }
        else
        {   
			
			$this->breadcrumbs->unshift(2, 'Take Attendance', 'attendance');
			$this->data['breadcrumb'] = $this->breadcrumbs->show();
			
			$this->data['employee'] = $this->Employees_model->get_all_employee();
			$this->template->public_render('Attendance/take_attendance', $this->data);
		}
		
	}

	function UpdateAttendance($id)
	{
		if(isset($_POST["submit"]))
        {
			echo $signin = date('Y-m-d H:i:s',strtotime($this->input->post('attendance_date').$this->input->post('sign_in')));
			$signout = ($this->input->post('sign_out'))? date('Y-m-d H:i:s',strtotime($this->input->post('attendance_date').$this->input->post('sign_out'))) : "";
			
			$params = array(
					'ATTENDANCE_TAKEN_DATE'=>date('Y-m-d H:i:s',strtotime($this->input->post("attendance_date"))),
					'UID'=>$this->input->post('UID'),
					'ATTENDACE'=>'P',
					'LOCATION'=>$this->input->post('LOCATION'),
					// 'IS_LATE'=>$IS_LATE,
					'SIGN_IN'=>$signin,
					'SIGN_OUT'=>$signout
				);
           
			
            $result=$this->Employees_attendance_model->updateUserAttendance($id,$params); 
            redirect('Employee_attendance/UpdateAttendance/'.$id);
		}
		else
		{

			$this->breadcrumbs->unshift(2, 'Update Attendance', 'attendance');
			$this->data['breadcrumb'] = $this->breadcrumbs->show();
			$this->data['attended'] = $this->db->select('*')->where('ATD_ID',$id)->get('emp_attendance')->row();
			$this->data['employee'] = $this->Employees_model->get_all_employee();
			$this->template->public_render('Attendance/update_attendance', $this->data);
		}
		
			
	}


	function CheckAttendance()
	{
		$this->breadcrumbs->unshift(2, 'Check Attendance', 'attendance');
		$this->data['breadcrumb'] = $this->breadcrumbs->show();
		
		$this->template->public_render('Attendance/check_attendance', $this->data);
	}

	
	
	//Get Employees
    function getEmployees(){
		$response=array();
		$num_rec_per_page = $_POST["perpage"];
		if (isset($_POST["page"])) { $page  = $_POST["page"]; } else { $page=1; };
		$start_from = ($page-1) * $num_rec_per_page;
		$response['start_from']=$start_from;
		$employess=$this->Employees_attendance_model->getAllEmployess();
		foreach($employess as $key=>$emp){
			$emp->emp_index=$key;
			$emp->take_attendance=(!empty($emp->ATTENDACE))?$emp->ATTENDACE:'';
			$emp->late=(!empty($emp->IS_LATE))?true:false;
			$emp->location=(!empty($emp->LOCATION))?$emp->LOCATION:'office';
			$emp->sign_in=(!empty($emp->SIGN_IN))?date('H:i A',strtotime($emp->SIGN_IN)):'--';
			$emp->sign_out=(!empty($emp->SIGN_OUT))?date('H:i A',strtotime($emp->SIGN_OUT)):'--';
			$emp->is_done_sign_in=(!empty($emp->SIGN_IN))?true:false;
			$emp->is_done_sign_out=(!empty($emp->SIGN_OUT))?true:false;
		}
		
		$attendance_obj=$this->Employees_attendance_model->checkAttendance();
		$response['employess']=$employess;
		$response['show_action_btn']=(!empty($attendance_obj[0]->total_cnt))?'Update_Attendance':'Take_Attendance';
		$response['total_presents']=(!empty($attendance_obj[0]->total_cnt))?$attendance_obj[0]->total_presents:0;
		$response['total_absents']=(!empty($attendance_obj[0]->total_cnt))?$attendance_obj[0]->total_absents:0;
		echo json_encode($response);
	}

	function GetAttendance($date){
		$this->data['date'] = $date;
		$this->load->view('Attendance/generate_day_report', $this->data);
	}
	
	//Save Attendance
	function saveAttendance(){
		$response=$data=array();
		$emps=json_decode($_POST['emps'],true);
		for($i=0;$i<count($emps);$i++){
			$ATTENDANCE_TAKEN_DATE=date('Y-m-d H:i:s');
			$UID=$emps[$i]['id'];
			$ATTENDACE=$emps[$i]['take_attendance'];
			$LOCATION=$emps[$i]['location'];
			$IS_LATE=($emps[$i]['late']==true)?1:0;
			$SIGN_IN=date('Y-m-d H:i:s');
			$data[]=array('ATTENDANCE_TAKEN_DATE'=>$ATTENDANCE_TAKEN_DATE,
						  'UID'=>$UID,
						  'ATTENDACE'=>$ATTENDACE,
						  'LOCATION'=>$LOCATION,
						  'IS_LATE'=>$IS_LATE,
						  'SIGN_IN'=>$SIGN_IN);
		}
		$result=$this->Employees_attendance_model->saveAttendance($data);
		/*if($result>0){
			$response['error']=false;
			$response['message']='Success';
			$response['show_action_btn']='Take_Attendance';
		}else{
			$response['error']=true;
			$response['message']='Fail';
			$response['show_action_btn']='Update_Attendance';
		}*/
		$response['error']=true;
		$response['message']='Fail';
		$response['show_action_btn']='Update_Attendance';
				
		echo json_encode($response);
	}

	//get daily attendance report
	function DailyReport(){
		$this->breadcrumbs->unshift(2, 'Daily Report', 'attendance');
		$this->data['breadcrumb'] = $this->breadcrumbs->show();
		
       // $this->data['employee'] = $this->Employees_model->get_all_employee();
        /* Load Template */
        $this->template->public_render('Attendance/daily_report', $this->data);
	}

	function GetDailyReport($from_date,$to_date)
	{
		$this->data['from_date'] = $from_date ;
		$this->data['to_date'] = $to_date;
		$this->load->view('Attendance/generate_daily_report', $this->data);
		
	}

	//get monthly attendance report
	function MonthlyReport()
	{
		$this->breadcrumbs->unshift(2, 'Monthly Report', 'attendance');
		$this->data['breadcrumb'] = $this->breadcrumbs->show();		
        $this->template->public_render('Attendance/monthly_report', $this->data);
	}

	function GetMonthlyReport($pick_year)
	{
		$this->data['pick_year'] = $pick_year ;
		$this->load->view('Attendance/generate_monthly_report', $this->data);
	}
    
}
